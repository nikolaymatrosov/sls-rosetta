repo: nikolaymatrosov/sls-rosetta
languages:
  - name: go
    title: Go
  - name: typescript
    title: TypeScript
#  - name: csharp
#    title: C#
#  - name: java
#    title: Java
#  - name: python
#    title: Python
#  - name: php
#    title: PHP
examples:
  go:
    - name: hello
      title: Hello World
      description: |
        This example shows how to create a simple function that returns a string.
      deploy:
        - type: terraform
          exclusive:
            - tf
        - type: none
    - name: raw-function-requests
      title: Raw Function Requests
      description: |
        This example shows how to create a function that handles raw requests.
      deploy:
        - type: terraform
          exclusive:
            - tf
        - type: none
    - name: apigw
      title: API Gateway
      description: |
        This example shows how to use the API Gateway to expose a function to the internet.
      deploy:
        - type: terraform
          exclusive:
            - tf
        - type: none
    - name: ymq
      title: YMQ
      description: |
        This example shows how to use YMQ to send and receive messages.
      deploy:
        - type: terraform
          exclusive:
            - tf
        - type: none
    - name: storage
      title: Object Storage trigger
      description: |
        This example shows how to use Yandex Object Storage trigger to react on events from the bucket.
        Also this example shows how to prebuild the function and deploy it as a binary with all dependencies.
      deploy:
        - type: terraform
          exclusive:
            - tf
        - type: none
  typescript:
    - name: apigw
      title: API Gateway
      description: |
        This example shows how to use the API Gateway to expose a function to the internet.
      deploy:
        - type: terraform
          exclusive:
            - tf
        - type: none
    - name: ymq
      title: YMQ
      description: |
          This example shows how to use YMQ to send and receive messages.
      deploy:
        - type: terraform
          exclusive:
              - tf
        - type: none
    - name: async
      title: Async
      description: |
          This example shows how to invoke a function asynchronously.
      deploy:
        - type: terraform
          exclusive:
              - tf
        - type: none
    - name: hello
      title: Hello World
      description: |
          This example shows how to create a simple function that returns a string.
      deploy:
        - type: terraform
          exclusive:
              - tf
        - type: none
    - name: documentdb
      title: DocumentDB
      description: |
          This example shows how to use DocumentDB to store and retrieve data.
      deploy:
        - type: terraform
          exclusive:
              - tf
        - type: none